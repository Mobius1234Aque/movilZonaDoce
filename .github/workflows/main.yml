name: CI Pipeline

on:
  push:
    branches:
      - develop
      - 'feature/*'
      - 'hotfix/*'
  pull_request:
    branches:
      - develop
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['16.x', '18.x']

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-cache-${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-cache-${{ runner.os }}-node-${{ matrix.node-version }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install EAS CLI
        run: npm install --global eas-cli

      - name: Install dependencies
        run: npm install

      # Ejecutar pruebas unitarias
      - name: Run tests
        run: npm test

      # Lint del c√≥digo
      - name: Lint code with EAS CLI
        run: eas lint --max-warnings=0

  # Build para Android e iOS
  build:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install EAS CLI
        run: npm install --global eas-cli

      - name: Install dependencies
        run: npm install

      # Construir para Android
      - name: Build APK for Android
        run: eas build -p android --profile preview
        env:
          EAS_TOKEN: ${{ secrets.EXPO_TOKEN }}  # Usa el token de EAS para el build en la nube

      # Construir para iOS
      - name: Build IPA for iOS
        run: eas build -p ios
        env:
          EAS_TOKEN: ${{ secrets.EXPO_TOKEN }}

