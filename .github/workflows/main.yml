name: CI Pipeline

on:
  push:
    branches:
      - develop
      - 'feature/*'
      - 'hotfix/*'
  pull_request:
    branches:
      - develop
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['16.x', '18.x']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-cache-${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            npm-cache-${{ runner.os }}-node-${{ matrix.node-version }}

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test

  build:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install EAS CLI
        run: npm install --global eas-cli

      - name: Install dependencies
        run: npm install

      # Autenticar en EAS
      - name: Authenticate to EAS
        run: eas login --token ${{ secrets.EXPO_TOKEN }}

      # Construir para Android
      - name: Build APK for Android
        run: eas build --platform android --profile preview
        env:
          EAS_TOKEN: ${{ secrets.EXPO_TOKEN }}

  notify:
    name: Send Email Notification
    runs-on: ubuntu-latest
    needs: build
    if: always()  # Notificar tanto si falla como si es exitoso
    steps:
      - name: Send email notification
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Build ${{ steps.build-and-test.outcome }}:${{ github.repository }}
          body: |
            The CI build has ${{ steps.build-and-test.outcome }} for ${{ github.repository }}.
            Commit: ${{ github.sha }}
            Branch: ${{ github.ref }}
            Author: ${{ github.actor }}
          to: ${{ secrets.EMAIL_TO }}
          from: ${{ secrets.EMAIL_USERNAME }}
